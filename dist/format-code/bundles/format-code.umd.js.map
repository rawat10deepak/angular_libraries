{"version":3,"file":"format-code.umd.js","sources":["../../../projects/format-code/src/lib/format-code.service.ts","../../../projects/format-code/src/lib/format-code.component.ts","../../../projects/format-code/src/lib/format-code.module.ts","../../../projects/format-code/src/public-api.ts","../../../projects/format-code/src/format-code.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormatCodeService {\n\n  constructor() { }\n}\n","import { Component, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Component({\n  selector: 'lib-format-code',\n  template: `\n    <div>\n      <ng-content> </ng-content>\n    </div>\n  `,\n  styles: [\n    `\n      div {\n        padding: 20px;\n        margin: 10px auto;\n        border-radius: 7px;\n      }\n    `,\n  ],\n})\nexport class FormatCodeComponent implements OnInit {\n  @Input() color: string = 'rgb(42,100,250)';\n  @Input() bgColor: string = 'rgb(0,0,30,0.9)';\n  @Input() font: string = 'consolas, monospace';\n\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\n\n  ngOnInit(): void {\n    this.renderer.setStyle(\n      this.el.nativeElement.firstElementChild,\n      'color',\n      this.color\n    );\n\n    this.renderer.setStyle(\n      this.el.nativeElement.firstElementChild,\n      'backgruondColor',\n      this.bgColor\n    );\n\n    this.renderer.setStyle(\n      this.el.nativeElement.firstElementChild,\n      'font-family',\n      this.font\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormatCodeComponent } from './format-code.component';\n\n\n\n@NgModule({\n  declarations: [FormatCodeComponent],\n  imports: [\n  ],\n  exports: [FormatCodeComponent]\n})\nexport class FormatCodeModule { }\n","/*\n * Public API Surface of format-code\n */\n\nexport * from './lib/format-code.service';\nexport * from './lib/format-code.component';\nexport * from './lib/format-code.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Injectable","i0","Component","Input","NgModule"],"mappings":"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"}